
    "let g:ale_linters = {'c': ['clangd'], 'cpp': ['clangd'], 'rust': ['analyzer']}
    "nnoremap <Leader>] :ALEGoToDefinition<CR>
    "let g:ale_cpp_clangd_options = '--background-index --log=info --header-insertion=iwyu '
    "call ale#Set('cpp_clangd_options', '')
    "set omnifunc=ale#completion#OmniFunc
    "imap <C-n> <Plug>(ale_complete)



"let g:lsp_semantic_enabled = 1
let g:ale_disable_lsp = 1
let g:lsp_log_verbose=1
let g:lsp_log_file = expand('vim-lsp.log')

let g:lsp_document_code_action_signs_enabled=0
let g:lsp_completion_documentation_delay = 0
"let g:lsp_diagnostics_enabled = 0

"augroup lsp_clangd
    "autocmd!
    "autocmd User lsp_setup call lsp#register_server({
                "\ 'name':'clangd',
                "\ 'cmd': {server_info->['clangd', '--pretty', '--log=info', '--background-index', '--compile-commands-dir='.$PWD]},
                "\ 'whitelist': ['c', 'cpp', 'objc', 'objcpp'],
                "\ 'semantic_highlight': {
                "\   'entity.name.function.cpp' : 'function',
                "\   'entity.name.function.method.cpp' : 'function',
                "\   'entity.name.function.method.static.cpp' : 'function',
                "\   'entity.name.function.preprocessor.cpp': 'preproc',
                "\   'entity.name.namespace.cpp': 'constant',
                ""\   'entity.name.other.dependent.cpp': 'label',
                "\   'entity.name.type.class.cpp': 'constant',
                ""\   'entity.name.type.concept.cpp',
                ""\   'entity.name.type.dependent.cpp',
                "\   'entity.name.type.enum.cpp': 'type',
                ""\   'entity.name.type.template.cpp': 'function',
                ""\   'entity.name.type.typedef.cpp',
                ""\   'meta.disabled' : 'label',
                ""\   'storage.type.primitive.cpp',
                "\   'variable.other.cpp': 'identifier',
                "\   'variable.other.enummember.cpp': 'identifier',
                "\   'variable.other.field.cpp': 'special' ,
                "\   'variable.other.field.static.cpp': 'special',
                ""\   'variable.other.local.cpp': 'identifier',
                "\   'variable.parameter.cpp': 'identifier',
                "\ }
                "\ })
    "autocmd FileType c setlocal omnifunc=lsp#complete
    "autocmd FileType cpp setlocal omnifunc=lsp#complete
    "autocmd FileType objc setlocal omnifunc=lsp#complete
    "autocmd FileType objcpp setlocal omnifunc=lsp#complete
"augroup end


let g:lsp_cxx_hl_log_file = 'vim-lsp-cxx-hl.log'
let g:lsp_cxx_hl_verbose_log = 1
